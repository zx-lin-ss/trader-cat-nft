import { ethers } from "hardhat"; 

async function main() {
    console.log("üöÄ Starting Tradercat NFT deployment to Sepolia...\n"); 

    const [deployer] = await ethers.getSigners();

    console.log("üìã Deployment Details:");
    console.log("Deploying with account:", deployer.address);

    const balance = await ethers.provider.getBalance(deployer.address); 
    console.log("Account balance:", ethers.formatEther(balance), "ETH");

    if (balance === 0n) {
        throw new Error("‚ùå Insufficient balance! Get Sepolia ETH from a faucet.");
    }
    
    console.log("\n‚è≥ Deploying Tradercat contract...");
    
    const TradercatFactory = await ethers.getContractFactory("Tradercat");
    const tradercat = await TradercatFactory.deploy(deployer.address);

    console.log("‚è≥ Waiting for deployment transaction to be mined...");
    await tradercat.waitForDeployment();

    const contractAddress = await tradercat.getAddress();

    console.log("\n‚úÖ Deployment Successful!");
    console.log("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ");
    console.log("üìç Contract Address:", contractAddress);
    console.log("üë§ Owner Address:", deployer.address);
    console.log("üè∑Ô∏è  Name:", await tradercat.name());
    console.log("üî§ Symbol:", await tradercat.symbol());
    console.log("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ");
    
    console.log("\nüîó View on Sepolia Etherscan:");
    console.log(`https://sepolia.etherscan.io/address/${contractAddress}`);

    console.log("\nüìù Save this information for later use!");
    console.log("\nTo verify contract, run:");
    console.log(`npx hardhat verify --network sepolia ${contractAddress} "${deployer.address}"`);   
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error("\n‚ùå Deployment failed!");
    console.error(error); 
    process.exit(1);
  });